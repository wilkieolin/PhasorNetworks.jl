var documenterSearchIndex = {"docs":
[{"location":"#PhasorNetworks","page":"Home","title":"PhasorNetworks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PhasorNetworks.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#PhasorNetworks.Args","page":"Home","title":"PhasorNetworks.Args","text":"Training loops/primitives\n\n\n\n\n\n","category":"type"},{"location":"#PhasorNetworks.match_offsets-Tuple{Union{SpikeTrain, SpikeTrainGPU}, Union{SpikeTrain, SpikeTrainGPU}}","page":"Home","title":"PhasorNetworks.match_offsets","text":"Delay spike trains as necessary to make the represented phases between them match\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.match_offsets-Tuple{Vector{<:Union{SpikeTrain, SpikeTrainGPU}}}","page":"Home","title":"PhasorNetworks.match_offsets","text":"Delay the spike trains in a vector as necessary to make their offsets match\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.phase_to_potential-Tuple{Real, AbstractVector}","page":"Home","title":"PhasorNetworks.phase_to_potential","text":"Convert a static phase to the complex potential of an R&F neuron\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.phase_to_time-Tuple{AbstractArray}","page":"Home","title":"PhasorNetworks.phase_to_time","text":"Converts a matrix of phases into a spike train via phase encoding\n\nphasetotrain(phases::AbstractMatrix, spk_args::SpikingArgs, repeats::Int = 1, offset::Real = 0.0)\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.potential_to_phase-Tuple{AbstractArray, Real}","page":"Home","title":"PhasorNetworks.potential_to_phase","text":"Convert the potential of a neuron at an arbitrary point in time to its phase relative to a reference\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.similarity_outer-Tuple{AbstractArray{<:Real}, AbstractArray{<:Real}}","page":"Home","title":"PhasorNetworks.similarity_outer","text":"Slicing each array along 'dims', find the similarity between each corresponding slice and reduce along 'reduce_dim'\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.solution_to_train-Tuple{AbstractArray{<:Complex}, AbstractVector{<:Real}}","page":"Home","title":"PhasorNetworks.solution_to_train","text":"This implementation takes a single matrix at pre-selected, representative times and converts each temporal slice to spikes.\n\n\n\n\n\n","category":"method"},{"location":"#PhasorNetworks.solution_to_train-Tuple{AbstractVector{<:AbstractArray}, AbstractVector{<:Real}, Tuple{Real, Real}}","page":"Home","title":"PhasorNetworks.solution_to_train","text":"This implementation takes a full solution (represented by a vector of arrays) and finds the spikes from it.\n\n\n\n\n\n","category":"method"}]
}
